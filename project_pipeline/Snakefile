import pandas as pd


df_samples = pd.read_csv('data/proteins_pdb.csv', sep = ',')
#change sample names to use Uniprot accession codes, not gene names.
uniprot_id = list(df_samples['Uniprot_ID'])
#Establishing the end directory
# rule all:
#     input:
        # Here I place my final analysis. What is my final analysis?

# rule pdb_files:
#     input:
#         'data/proteins_pdb.csv'

#     output:
#         directory(expand('data/input/RCSB_cif/{protein}/', protein = uniprot_id))

#     script:
#         'scripts/get_pdb_files_aa.py'

rule pdb_ids:
    input:
        'data/proteins.tsv'
        
    output:
        'data/proteins_pdb.tsv'
        
    script:
        'scripts/get_pdb_ids_aa.py'


rule best_pdb_files:
    input:
        'data/proteins_pdb.tsv',
        expand('data/input/RCSB_cif/{protein}/', protein = uniprot_id)

    output:
        'data/proteins_pdb_best.tsv',
        'data/input/RCSB_cif_best'

    script:
        'scripts/best_pdb_aa.py'

rule interface_residues:
    input:
        'data/proteins_pdb_best.tsv',

    output:
        'data/proteins_interface.tsv'

    script:
        'get_interface_all_aa.py'

rule convert_RCSB_cif_to_pdb:
    input:
        'data/input/RCSB_cif_best/{sample}.cif'

    output:
        'data/input/RCSB/pdbs/{sample}.pdb'    

    shell:
        "python ./env/lib/python3.9/site-packages/pdbtools/pdb_fromcif.py {input} > {output} "

rule convert_AF_cif_to_pdb:
    input:
        'data/proteins_pdb.csv',
        'data/input/Alphafold_cif'

    output:
        'data/output/RCSB_af_full/poly_g_6'

    script:
        'scripts/af_cif_to_pdb.py'

rule compare_structures:
    input:
        'proteins_pdb_best.tsv', #args.pdb_ids
        'input' #args.input_pdb_dir# args.linker_fasta_dir.

    output:
        'output' #args.output_dir

    shell:
        "python aa_main.py --config configs/test.ini"
#           Do I have to specify the scripts that will be used for this? Or will this automatically run it? 