import pandas as pd


#Establishing the end directory
# rule all:
#     input:
#         Here I place my final analysis. What is my final analysis?

#determine pdb ids and chains.
rule pdb_ids:
    input:
        'data/proteins.tsv'
        
    output:
        'data/proteins_pdb_w_chains.tsv'
        
    script:
        'scripts/get_pdb_ids_aa.py'

# Can also merge this step into the first step. 
rule pdb_files:
    input:
        'data/proteins_pdb_unique_chains.tsv'

    output:
        directory(expand('data/input/RCSB_cif/{protein}/', protein = uniprot_id))

    script:
        'scripts/get_pdb_files_aa.py'`


rule best_pdb_files:
    input:
        'data/proteins_pdb_no_na.tsv',
        expand('data/input/RCSB_cif/{protein}/', protein = updated_uniprot_id)

    output:
        'data/proteins_pdb_summary.tsv',
        'data/proteins_pdb_best.tsv',
        directory('data/input/RCSB_cif_best')

    script:
        'scripts/best_pdb_aa.py'

# Don't need this 
# rule interface_residues:
#     input:
#         'data/proteins_pdb_best.tsv',

#     output:
#         'data/proteins_interface.tsv'

#     script:
#         'scripts/get_interface_all_aa.py'

# May not need this. If needed, could bundle into above step.
# rule convert_RCSB_cif_to_pdb:
#     input:
#         'data/proteins_pdb_best.tsv',
#         'data/input/RCSB_cif_best/'

#     output:
#         directory('data/input/RCSB/pdbs/')

#     script:
#         "scripts/rcsb_cif_to_pdb.py"

# Again, same as above.
# rule convert_AF_cif_to_pdb:
#     input:
#         'data/proteins_pdb_best.tsv',
#         'data/input/Alphafold_cif/'

#     output:
#         directory('data/output/RCSB_af_full/poly_g_6/')

#     script:
#         'scripts/af_cif_to_pdb.py'

# Will probably have to reconfigure this.
rule compare_structures_input:
    input:
        'proteins_pdb_best.tsv', #args.pdb_ids
        'input' #args.input_pdb_dir# args.linker_fasta_dir.

    output:
        directory('output') #args.output_dir

    shell:
        "python aa_main.py --config configs/input.ini"
#           Do I have to specify the scripts that will be used for this? Or will this automatically run it?


rule compare_structures_output:
    input:
        'proteins_pdb_best.tsv', #args.pdb_ids
        'input' #args.input_pdb_dir# args.linker_fasta_dir.

    output:
        'output' #args.output_dir

    shell:
        "python aa_main.py --config configs/output.ini"
