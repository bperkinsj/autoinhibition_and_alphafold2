import pandas as pd


df_samples = pd.read_csv('data/proteins_pdb.tsv', sep = '\t')
#change sample names to use Uniprot accession codes, not gene names.
uniprot_id = list(df_samples['Uniprot_ID'])

updated_df_samples = pd.read_csv('data/proteins_pdb_no_na.tsv', sep='\t')
updated_uniprot_id = list(updated_df_samples['Uniprot_ID'])
#Establishing the end directory
# rule all:
#     input:
#         Here I place my final analysis. What is my final analysis?

# rule pdb_ids:
#     input:
#         'data/proteins.tsv'
        
#     output:
#         'data/proteins_pdb_w_chains.tsv'
        
#     script:
#         'scripts/get_pdb_ids_aa.py'

#        
# rule prune_ids:
#     input:
#         'data/proteins_pdb_w_chains.tsv'

#     output:
#         'data/proteins_pdb_unique_chains.tsv'

#     script:
#         'scripts/prune_pdb_ids.py'


# rule pdb_files:
#     input:
#         'data/proteins_pdb_unique_chains.tsv'

#     output:
#         directory(expand('data/input/RCSB_cif/{protein}/', protein = uniprot_id))

#     script:
#         'scripts/get_pdb_files_aa.py'

# rule drop_na:
#     input:
#         'data/proteins_pdb_unique_chains.tsv'
#     output:
#         'data/proteins_pdb_no_na.tsv'
#     script:
#         'scripts/drop_na_aa.py'


# rule best_pdb_files:
#     input:
#         'data/proteins_pdb_no_na.tsv',
#         expand('data/input/RCSB_cif/{protein}/', protein = updated_uniprot_id)

#     output:
#         'data/proteins_pdb_summary.tsv',
#         'data/proteins_pdb_best.tsv',
#         directory('data/input/RCSB_cif_best')

#     script:
#         'scripts/best_pdb_aa.py'

# rule interface_residues:
#     input:
#         'data/proteins_pdb_best.tsv',

#     output:
#         'data/proteins_interface.tsv'

#     script:
#         'scripts/get_interface_all_aa.py'

rule convert_RCSB_cif_to_pdb:
    input:
        'data/proteins_pdb_best.tsv',
        'data/input/RCSB_cif_best/'

    output:
        directory('data/input/RCSB/pdbs/')

    script:
        "scripts/rcsb_cif_to_pdb.py"

rule convert_AF_cif_to_pdb:
    input:
        'data/proteins_pdb_best.tsv',
        'data/input/Alphafold_cif/'

    output:
        directory('data/output/RCSB_af_full/poly_g_6/')

    script:
        'scripts/af_cif_to_pdb.py'

rule compare_structures_input:
    input:
        'proteins_pdb_best.tsv', #args.pdb_ids
        'input' #args.input_pdb_dir# args.linker_fasta_dir.

    output:
        'output' #args.output_dir

    shell:
        "python aa_main.py --config configs/input.ini"
#           Do I have to specify the scripts that will be used for this? Or will this automatically run it?


rule compare_structures_output:
    input:
        'proteins_pdb_best.tsv', #args.pdb_ids
        'input' #args.input_pdb_dir# args.linker_fasta_dir.

    output:
        'output' #args.output_dir

    shell:
        "python aa_main.py --config configs/output.ini"
