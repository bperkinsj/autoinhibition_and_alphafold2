'''
THIS IS A TEST SNAKEFILE WITH A SMALLER DATASET. DELETE THIS AFTER TESTING.
'''



rule all:
    input:
        'sample_data/figures/sample_rmsd_plot.png'

# Determine pdb ids and chains.
rule pdb_ids:
    input:
        'sample_data/sample_proteins.tsv'
        
    output:
        'sample_data/sample_proteins_by_pdb.tsv'
        
    script:
        'scripts/pdb_ids.py'

rule fix_offset:
    input:
        'sample_data/sample_proteins_by_pdb.tsv'
        
    output:
        'sample_data/sample_offset_fixed_proteins_by_pdb.tsv'
        
    script:
        'scripts/fix_offset.py'

# Determine the pdb files where both domains are at least 80% complete, where domain 1 is at least 80% complete, 
# where domain 2 is at least 80% complete, and where both domains are at least 60% complete. Determine the residues in each interface
# that are interacting using the 60% complete pdb files.
rule interface_analysis:
    input:
        'sample_data/sample_proteins_by_pdb.tsv',

    output:
        'sample_data/sample_proteins_pdb_summary.tsv',
        'sample_data/sample_proteins_pdb_both_80.tsv',
        'sample_data/sample_proteins_pdb_1_80.tsv',
        'sample_data/sample_proteins_pdb_2_80.tsv',
        'sample_data/sample_proteins_pdb_both_60.tsv',
        'sample_data/sample_proteins_interface.tsv'

    script:
        'scripts/interface_analysis.py'


# May not need this. If needed, could bundle into above step.
# rule convert_RCSB_cif_to_pdb:
#     input:
#         'sample_data/proteins_pdb_best.tsv',
#         'sample_data/input/RCSB_cif_best/'

#     output:
#         directory('sample_data/input/RCSB/pdbs/')

#     script:
#         "scripts/rcsb_cif_to_pdb.py"

# Again, same as above.
# rule convert_AF_cif_to_pdb:
#     input:
#         'sample_data/proteins_pdb_best.tsv',
#         'sample_data/input/Alphafold_cif/'

#     output:
#         directory('sample_data/output/RCSB_af_full/poly_g_6/')

#     script:
#         'scripts/af_cif_to_pdb.py'

# Will probably have to reconfigure this.
rule calculate_rmsds:
    input:
        'sample_data/sample_proteins_pdb_both_60.tsv'

    output:
        'sample_data/sample_trim_values.tsv',
        'sample_data/sample_rmsds.tsv'

    script:
        'scripts/calculate_rmsd.py'

rule rmsd_plot:
    input:
        'sample_data/sample_rmsds.tsv'

    output:
        'sample_data/figures/sample_rmsd_plot.png'

    script:
        'scripts/rmsd_plot.py'