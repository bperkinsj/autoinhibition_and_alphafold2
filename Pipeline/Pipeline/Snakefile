import pandas as pd


df_samples = pd.read_csv('data/proteins.tsv', sep = '\t')
sample_names = list(df_samples['Gene_name'])

# Don't need this section, we won't need a target rule as there's no data subset we're trying to collect.
rule all:
    input:
        'figures/global_analysis.png',
        'figures/drivers_protein_specific.png',

#don't need this, I've already collected the PDB files.
rule pdb_ids:
    input:
        'data/proteins.tsv'
        
    output:
        'data/proteins_pdb.tsv'
        
    script:
        'scripts/get_pdb_ids.py'
        
#This I will keep. Take note of the wildcards here.       
rule pdb_files:
    input: 
        'data/proteins_pdb.tsv'
        
    output:
        directory(expand('data/structures/{protein}', protein = sample_names))
        
    script:
        'scripts/get_pdb_files.py'

#Also need this        
rule best_pdb_files:
    input: 
        'data/proteins_pdb.tsv',
        expand('data/structures/{protein}', protein = sample_names)
        
    output:
        'data/proteins_pdb_best.tsv'
        
    script:
        'scripts/best_pdb.py'

#Might need this? If we're just overlaying coordinates from Alphafold onto our PDBs, we might not need to determine them. Could be useful information to have though, might inform our Alphafold analysis.        
rule interface_residues:
    input:
        'data/proteins_pdb_best.tsv',
        
    output:
        'data/proteins_interface.tsv'
        
    script:
        'scripts/get_interface_all.py'
# I can possibly get rid of this. Jorge wasn't certain.        
rule map_mutations:
    input:
        'data/proteins_interface.tsv',
        'data/mutations/cmc_export.tsv'
        
    output:
        'data/enrichment_analysis/proteins_interface_drivers_norep.tsv',
        'data/enrichment_analysis/proteins_interface_drivers_rep.tsv',
        
    script:
        'scripts/map_mutations_to_interface.py'

#Don't need this. I don't have the Alphafold information.         
rule analysis:
    input:
        'data/enrichment_analysis/proteins_interface_drivers_norep.tsv',
        'data/enrichment_analysis/proteins_interface_drivers_rep.tsv',
    
    output:
        'figures/global_analysis.png',
        'figures/drivers_protein_specific.png',
    
    log:
        # optional path to the processed notebook
        notebook="logs/notebooks/results.ipynb"
    
    notebook:
        "notebooks/results_template.py.ipynb"